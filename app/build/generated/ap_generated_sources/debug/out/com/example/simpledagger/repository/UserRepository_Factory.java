// Generated by Dagger (https://dagger.dev).
package com.example.simpledagger.repository;

import com.example.simpledagger.remote.UserService;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserRepository_Factory implements Factory<UserRepository> {
  private final Provider<UserService> userServiceProvider;

  public UserRepository_Factory(Provider<UserService> userServiceProvider) {
    this.userServiceProvider = userServiceProvider;
  }

  @Override
  public UserRepository get() {
    return new UserRepository(userServiceProvider.get());
  }

  public static UserRepository_Factory create(Provider<UserService> userServiceProvider) {
    return new UserRepository_Factory(userServiceProvider);
  }

  public static UserRepository newInstance(UserService userService) {
    return new UserRepository(userService);
  }
}
